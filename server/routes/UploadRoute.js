const express = require('express');
const router = express.Router();
const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

router.post('/upload-file-operation', async (req, res) => {
  try {
    // Extract file and operation information from the request body
    const { fileName, fileType, filePreview, operation } = req.body;

    // Ensure that the required fields in the "operation" object are present
    if (!operation) {
      return res.status(400).json({ error: 'Missing operation information.' });
    }

    // Check if the uploaded file is a CSV file
    if (fileType === 'csv') {
      // Write the file data to a temporary CSV file
      const tempFilePath = path.join(__dirname, '..', 'temp', fileName);
      const fileData = Buffer.from(filePreview.split(';base64,').pop(), 'base64');
      fs.writeFileSync(tempFilePath, fileData);

      // Execute the Python script on the uploaded file
      const pythonProcess = spawn('python', ['descriptive.py', tempFilePath]);

      pythonProcess.stdout.on('data', (data) => {
        console.log(`stdout: ${data}`);
      });

      pythonProcess.stderr.on('data', (data) => {
        console.error(`stderr: ${data}`);
      });

      pythonProcess.on('close', (code) => {
        console.log(`child process exited with code ${code}`);
        if (code === 0) {
          // Read the output CSV file generated by the Python script
          const outputFilePath = path.join(__dirname, '..', 'temp', 'output.csv');
          const fileContent = fs.readFileSync(outputFilePath);

          // Send the output file content back to the frontend
          res.setHeader('Content-Type', 'text/csv');
          res.status(200).send(fileContent);
        } else {
          res.status(500).json({ error: 'An error occurred while processing the file' });
        }
      });
    } else {
      res.status(400).json({ error: 'Unsupported file type. Please upload a CSV file.' });
    }
  } catch (error) {
    console.error('Error uploading file and storing operation information:', error);
    res.status(500).json({ error: 'An error occurred while processing the request.' });
  }
});
module.exports = router;